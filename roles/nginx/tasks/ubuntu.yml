- name: Install nginx
  ansible.builtin.apt:
    # name: "nginx={{ packages['nginx']['version'] }}"
    name: nginx
    state: present
    update_cache: true
    allow_downgrade: true

- name: Copy nginx config
  ansible.builtin.copy:
    src: "{{ role_path }}/files/nginx.conf"
    dest: "/etc/nginx/nginx.conf"
    owner: 'root'
    mode: '0644'

- name: Delete default server
  ansible.builtin.file:
    path: "/etc/nginx/sites-enabled/default"
    state: absent
    force: true

- name: Build server config
  ansible.builtin.template:
    src: "{{ nginx_server_name }}.j2"
    dest: "/etc/nginx/sites-available/{{ nginx_server_name }}"
    mode: '0644'
  register: nginx

- name: Enable the server
  ansible.builtin.file:
    src: "/etc/nginx/sites-available/{{ nginx_server_name }}"
    dest: "/etc/nginx/sites-enabled/{{ nginx_server_name }}"
    state: link
    force: true

- name: Test nginx
  when: nginx.changed or nginx_force_restart
  ansible.builtin.shell:
    cmd: sudo nginx -t
  register: test
  failed_when: test.rc != 0
  notify: Restart nginx

- name: Ensure the server is started
  when: test.rc == 0
  ansible.builtin.service:
    name: nginx
    state: started
    enabled: true
